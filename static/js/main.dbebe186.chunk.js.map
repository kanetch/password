{"version":3,"sources":["logo.svg","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","props","handleChange","bind","state","id","password","e","name","target","value","this","setState","className","for","type","onChange","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,I,+CCgDAA,E,kDA7Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CACXC,GAAI,GACJC,SAAU,IALK,E,yDASNC,GACX,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvBC,KAAKC,SAAL,eACGJ,EAAOE,M,+BAKV,OACE,sBAAMG,UAAU,aAAhB,SACE,qCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOC,IAAI,KAAX,gBACA,uBACEN,KAAK,KACLO,KAAK,OACLL,MAAOC,KAAKP,MAAMC,GAClBW,SAAUL,KAAKT,kBAGnB,sBAAKW,UAAU,aAAf,UACE,uBAAOC,IAAI,WAAX,sBACA,uBACEN,KAAK,WACLO,KAAK,WACLL,MAAOC,KAAKP,MAAME,SAClBU,SAAUL,KAAKT,2B,GArCLe,IAAMC,WCWfC,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCISO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dbebe186.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      id: '',\n      password: '',\n    }\n  }\n\n  handleChange(e) {\n    const name = e.target.name\n    const value = e.target.value\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  render() {\n    return (\n      <form className='login-form'>\n        <fieldset>\n          <div className='user-input'>\n            <label for='id'>ID</label>\n            <input\n              name='id'\n              type='text'\n              value={this.state.id}\n              onChange={this.handleChange}\n            ></input>\n          </div>\n          <div className='user-input'>\n            <label for='password'>Password</label>\n            <input\n              name='password'\n              type='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n            ></input>\n          </div>\n        </fieldset>\n      </form>\n    )\n  }\n}\n\nexport default LoginForm\n","import logo from './logo.svg'\nimport './App.css'\nimport './LoginForm'\nimport LoginForm from './LoginForm'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <LoginForm></LoginForm>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}