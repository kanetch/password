{"version":3,"sources":["LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","props","useState","id","setId","password","setPassword","className","htmlFor","name","type","value","onChange","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAkCeA,MAhCf,SAAmBC,GAAQ,IAAD,EACJC,mBAAS,IADL,mBACjBC,EADiB,KACbC,EADa,OAEQF,mBAAS,IAFjB,mBAEjBG,EAFiB,KAEPC,EAFO,KAIxB,OACE,sBAAMC,UAAU,aAAhB,SACE,qCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOC,QAAQ,KAAf,gBACA,uBACEL,GAAG,KACHM,KAAK,KACLC,KAAK,OACLC,MAAOR,EACPS,SAAU,SAAAC,GAAC,OAAIT,EAAMS,EAAEC,OAAOH,aAGlC,sBAAKJ,UAAU,aAAf,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBACEL,GAAG,WACHM,KAAK,WACLC,KAAK,WACLC,MAAON,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAAYO,EAAEC,OAAOH,mBCdjCI,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCKSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.220a52c2.chunk.js","sourcesContent":["import { useState } from 'react'\n\nfunction LoginForm(props) {\n  const [id, setId] = useState('')\n  const [password, setPassword] = useState('')\n\n  return (\n    <form className='login-form'>\n      <fieldset>\n        <div className='user-input'>\n          <label htmlFor='id'>ID</label>\n          <input\n            id='id'\n            name='id'\n            type='text'\n            value={id}\n            onChange={e => setId(e.target.value)}\n          ></input>\n        </div>\n        <div className='user-input'>\n          <label htmlFor='password'>Password</label>\n          <input\n            id='password'\n            name='password'\n            type='password'\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          ></input>\n        </div>\n      </fieldset>\n    </form>\n  )\n}\n\nexport default LoginForm\n","import './App.css'\nimport './LoginForm'\nimport LoginForm from './LoginForm'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <LoginForm></LoginForm>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}